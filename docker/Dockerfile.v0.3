# Simple usage
# > docker build -t gaia .
# > Iniciamos el nodo con:
# > docker run -it gaia gaiad init
# > Iniciamos la sincronizacion
# > docker run -it gaia gaiad start

FROM golang:alpine AS build-env

# Set up dependencies
ENV PACKAGES curl make git libc-dev bash gcc linux-headers eudev-dev python

# Set working directory for the build
WORKDIR /go/src/github.com/cosmos/cosmos-sdk

# Add source files
COPY ./cosmos-sdk .
# RUN ls -lah /go/src/github.com/cosmos/cosmos-sdk

# Install minimum necessary dependencies, build Cosmos SDK, remove packages
RUN apk add --no-cache $PACKAGES && \
    make tools && \
    make install

# Final image
FROM alpine:edge
#FROM node:latest

# Install ca-certificates
RUN apk add --update ca-certificates bash git wget curl nodejs nodejs-npm yarn python make g++ tmux
#RUN apt-get update && apt-get install ca-certificates -y
WORKDIR /usr/src/app

# Copy over binaries from the build-env
COPY --from=build-env /go/bin/gaiad /usr/bin/gaiad
COPY --from=build-env /go/bin/gaiacli /usr/bin/gaiacli

COPY config/config.toml /
COPY config/genesis.json /
COPY lunie lunie
RUN cd lunie && yarn install && npm run build

VOLUME /root/.gaiad
RUN mkdir -p /root/.gaiad/config

#  Copy startup scripts
#  ###############################################################################
WORKDIR /root
COPY start_script.sh start_script.sh
COPY entrypoint.sh /entrypoint.sh
RUN chmod +x start_script.sh
RUN chmod +x /entrypoint.sh

#  Start
###############################################################################
# Run gaiad by default, omit entrypoint to ease using container with gaiacli
EXPOSE 26656 26657 9080
ENTRYPOINT ["/entrypoint.sh"]
CMD ["./start_script.sh"]

